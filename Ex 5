def user_connection(username):
    import random
    for i in range(random.randint(10, 20)):
        yield f"{username} message{i}"

def establish_connection(auth=True):
    import random
    id = f"{random.randint(0,100000000):010}"
    if auth:
        yield f"auth {id}"
    yield from user_connection(id)
    if auth:
        yield f"disconnect {id}"

def connection():
    import random
    connections = [establish_connection(True) for i in range(10)]
    connections.append(establish_connection(False))
    connections.append(establish_connection(False))
    while len(connections):
        conn = random.choice(connections)
        try:
            yield next(conn)
        except StopIteration:
            del connections[connections.index(conn)]

class Is_User(Exception):
    pass

class Disconnection(Exception):
    pass

class Message(Exception):
    pass

def write_to_file(file):
    while True:
        try:
            message = yield
            file.write(message)
            
        except Disconnection:
            file.close()
            yield

def connect_user():
    users = []
    user_co = []
    while True:
        try:
            user = yield
            users.append(user)
            f_name = user + 'messages.txt'
            f = open(f_name, 'w')
            co = write_to_file(f)
            user_co.append(co)
            next(co)
            
        except Is_User:
            user = yield
            if user in users: yield True
            else: yield False

        except Message:
            In = yield
            user = In[0]
            message = ' '
            for i in range(1, len(In)):
                message += '\n' + In[i]
            user_co[users.index(user)].send(message)

        except Disconnection:
            user = yield
            user_co[users.index(user)].throw(Disconnection)
            user_co[users.index(user)].close()
            user_co.pop(users.index(user))
            users.pop(users.index(user))

connected = connect_user()
next(connected)

for el in connection():
    print(el)
    In = list(el.split())
    
    if In[0] == 'auth':
        connected.send(In[1])
        
    elif In[0] == 'disconnect':
        connected.throw(Disconnection)
        connected.send(In[1])
        
    else:
        connected.throw(Is_User)
        f = connected.send(In[0])
        next(connected)
        if f:
            connected.throw(Message)
            connected.send(In)
